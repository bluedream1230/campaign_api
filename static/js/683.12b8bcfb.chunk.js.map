{"version":3,"file":"static/js/683.12b8bcfb.chunk.js","mappings":"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","sources":["../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx","../node_modules/chart.js/dist/chunks/helpers.segment.mjs","../node_modules/chart.js/dist/chart.mjs"],"sourcesContent":["import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  Object.assign(chart.options, nextOptions);\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, TypedChartComponent } from './types';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...props\n  }: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  type TypedChartJS = ChartJS<TType, TData, TLabel>;\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<TypedChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas ref={canvasRef} role='img' height={height} width={width} {...props}>\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as TypedChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types';\nimport { Chart } from './chart';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T, true>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst keyResolvers = {\n  '': v => v,\n  x: o => o.x,\n  y: o => o.y\n};\nfunction resolveObjectKey(obj, key) {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\nfunction _getKeyResolver(key) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\nfunction _splitKey(key) {\n  const parts = key.split('.');\n  const keys = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value, last) =>\n  _lookup(table, value, last\n    ? index => table[index][key] <= value\n    : index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\nfunction _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _isPointInArea as $, _factorize as A, finiteOrDefault as B, callback as C, _addGrace as D, _limitValue as E, toDegrees as F, _measureText as G, HALF_PI as H, _int16Range as I, _alignPixel as J, toPadding as K, clipArea as L, renderText as M, unclipArea as N, toFont as O, PI as P, each as Q, _toLeftRightCenter as R, _alignStartEnd as S, TAU as T, overrides as U, merge as V, _capitalize as W, getRelativePosition as X, _rlookupByKey as Y, _lookupByKey as Z, _arrayUnique as _, resolve as a, toLineHeight as a$, getAngleFromPoint as a0, getMaximumSize as a1, _getParentNode as a2, readUsedSize as a3, throttled as a4, supportsEventListenerOptions as a5, _isDomSupported as a6, descriptors as a7, isFunction as a8, _attachContext as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, noop as aF, distanceBetweenPoints as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, _longestText as aM, _filterBetween as aN, _lookup as aO, isPatternOrGradient as aP, getHoverColor as aQ, clone$1 as aR, _merger as aS, _mergerIf as aT, _deprecated as aU, _splitKey as aV, toFontString as aW, splineCurve as aX, splineCurveMonotone as aY, getStyle as aZ, fontString as a_, _createResolver as aa, _descriptors as ab, mergeIf as ac, uid as ad, debounce as ae, retinaScale as af, clearCanvas as ag, setsEqual as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, PITAU as b0, INFINITY as b1, RAD_PER_DEG as b2, QUARTER_PI as b3, TWO_THIRDS_PI as b4, _angleDiff as b5, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, log10 as z };\n","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"names":["defaultDatasetIdKey","reforwardRef","ref","value","current","setLabels","currentData","nextLabels","labels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","datasets","map","nextDataset","currentDataset","find","dataset","data","includes","push","Object","assign","cloneData","nextData","ChartComponent","param","height","width","redraw","type","options","plugins","fallbackContent","updateMode","props","canvasRef","useRef","chartRef","renderChart","ChartJS","destroyChart","destroy","useEffect","chart","nextOptions","config","setTimeout","update","canvas","role","Chart","forwardRef","createTypedChart","registerables","Line","LineController","Bar","BarController","Doughnut","DoughnutController","noop","uid","id","isNullOrUndef","isArray","Array","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","target","create","klen","k","isValidKey","key","indexOf","_merger","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","resolveObjectKey","obj","resolver","parts","split","tmp","part","_splitKey","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNumber","n","isNaN","epsilon","abs","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","updateFn","updateArgs","ticking","rest","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","clone","proto","fromObject","input","functionParse","rgbParse","Color","constructor","ret","hexParse","this","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","index_esm","isPatternOrGradient","getHoverColor","overrides","descriptors","getScope$1","node","root","scope","values","defaults","_descriptors","animation","backgroundColor","borderColor","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","get","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","_scriptable","startsWith","_indexable","_fallback","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","delete","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","readKey","prefix","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","delta","pointBefore","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","slopeDelta","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","bounds","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","event","cb","reduce","acc","cur","_duration","stop","cancel","remove","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","active","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","animationOptions","colors","properties","numbers","resize","show","animations","visible","hide","Animations","_properties","configure","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","iAxisKey","vAxisKey","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","tooltip","title","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","_dataset","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","Element","tooltipPosition","useFinalPosition","getProps","hasValue","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","position","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getPadding","getTicks","xLabels","yLabels","beforeLayout","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","change","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","fullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","fillRect","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","_layers","tz","z","gz","getSortedVisibleDatasetMetas","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","ScatterController","abstract","DateAdapter","chartOptions","formats","timestamp","amount","unit","startOf","weekday","endOf","members","adapters","_date","binarySearch","metaset","lookupMethod","getRange","evaluateInteractionItems","handler","getIntersectItems","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","autoPadding","addBox","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","invalidatePlugins","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","inner","lineJoin","fullCircles","drawFullCircleBorders","version","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","_args","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","LinearScale","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"sourceRoot":""}