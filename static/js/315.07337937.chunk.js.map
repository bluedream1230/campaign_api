{"version":3,"file":"static/js/315.07337937.chunk.js","mappings":"yJA4BA,IA1BA,SAAuBA,EAAMC,GACzB,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,GACzCC,EAAUC,KAAKC,KAAKP,EAAKQ,OAASP,GAqBxC,MAAO,CAAEQ,KAbT,WACIN,GAAgBD,GAAgBI,KAAKI,IAAIR,EAAc,EAAGG,IAC9D,EAWeM,KATf,WACIR,GAAgBD,GAAgBI,KAAKM,IAAIV,EAAc,EAAG,IAC9D,EAOqBW,KALrB,SAAcC,GACV,MAAMC,EAAaT,KAAKM,IAAI,EAAGE,GAC/BX,GAAgBD,GAAgBI,KAAKI,IAAIK,EAAYV,IACzD,EAE2BW,YAnB3B,WACI,MAAMC,GAASf,EAAc,GAAKD,EAC5BiB,EAAMD,EAAQhB,EACpB,OAAOD,EAAKmB,MAAMF,EAAOC,EAC7B,EAewChB,cAAaG,UACzD,C,0GCjBA,MAAMe,EAAW,CACb,0BAA2B,CAAEC,GAAI,IAK/BC,GAAWC,EAAAA,EAAAA,aACb,CAAC,EAeGC,KACE,IAfF,OACIC,GAAS,EAAI,UACbC,EAAS,SACTC,EAAQ,QACRC,GAAU,EAAI,aACdC,EAAe,GAAE,UACjBC,EAAY,CAAC,EAAC,UACdC,EAAS,UACTC,EAAS,OACTC,EAAM,GACNC,EAAK,CAAC,EAAC,MACPC,KACGC,GACN,GAGaC,EAAAA,EAAAA,KAEd,OACI,UAAC,IAAI,CACDb,IAAKA,KACDY,EACJF,GAAI,CAEAI,aAAc,OACdC,gBAAiB,YACjBb,UAAW,mCACRQ,GACL,WAGAH,GAAaI,IAAS,SAAC,IAAU,CAACD,GAAId,EAAUe,MAAOA,EAAOK,OAAQR,IACvED,GAAaI,IACV,SAAC,IAAU,CAACD,GAAId,EAAUe,OAAO,SAAC,IAAU,CAACM,QAAQ,KAAI,SAAEN,IAAqBK,OAAQR,IAI3FG,IAAS,SAAC,IAAO,IAGjBP,IACG,SAAC,IAAW,CAACM,GAAIJ,EAAWY,UAAWb,EAAa,SAC/CF,KAGPC,GAAWD,IACV,IAmBnB,K,sFCwEA,IAjJoB,KAChB,UAAC,IAAI,YACD,SAAC,IAAW,WACR,UAAC,KAAI,CAACgB,WAAS,EAACC,QAASC,EAAAA,GAAY,WACjC,SAAC,KAAI,CAACC,MAAI,EAACC,GAAI,GAAG,UACd,UAAC,KAAI,CAACJ,WAAS,EAACK,WAAW,SAASC,eAAe,gBAAgBL,QAASC,EAAAA,GAAY,WACpF,SAAC,KAAI,CAACC,MAAI,EAACC,IAAE,EAACG,cAAY,YACtB,SAAC,IAAQ,CAACT,QAAQ,cAAcU,OAAQ,QAE5C,SAAC,KAAI,CAACL,MAAI,YACN,SAAC,IAAQ,CAACL,QAAQ,cAAcU,OAAQ,GAAIC,MAAO,aAI/D,SAAC,KAAI,CAACN,MAAI,EAACC,GAAI,GAAG,UACd,SAAC,IAAQ,CAACN,QAAQ,cAAcU,OAAQ,SAE5C,SAAC,KAAI,CAACL,MAAI,EAACC,GAAI,GAAG,UACd,UAAC,KAAI,CAACJ,WAAS,EAACC,QAAS,EAAE,WACvB,SAAC,KAAI,CAACE,MAAI,EAACC,GAAI,GAAG,UACd,UAAC,KAAI,CAACJ,WAAS,EAACK,WAAW,SAASJ,QAASC,EAAAA,GAAaI,eAAe,gBAAe,WACpF,SAAC,KAAI,CAACH,MAAI,EAACC,GAAI,EAAE,UACb,SAAC,IAAQ,CAACN,QAAQ,cAAcU,OAAQ,QAE5C,SAAC,KAAI,CAACL,MAAI,EAACC,GAAI,EAAE,UACb,UAAC,KAAI,CAACJ,WAAS,EAACK,WAAW,SAASJ,QAASC,EAAAA,GAAaI,eAAe,gBAAe,WACpF,SAAC,KAAI,CAACH,MAAI,EAACC,IAAE,EAACG,cAAY,YACtB,SAAC,IAAQ,CAACT,QAAQ,cAAcU,OAAQ,QAE5C,SAAC,KAAI,CAACL,MAAI,YACN,SAAC,IAAQ,CAACL,QAAQ,cAAcU,OAAQ,GAAIC,MAAO,kBAMvE,SAAC,KAAI,CAACN,MAAI,EAACC,GAAI,EAAE,UACb,SAAC,IAAQ,CAACN,QAAQ,cAAcU,OAAQ,aAIpD,SAAC,KAAI,CAACL,MAAI,EAACC,GAAI,GAAG,UACd,UAAC,KAAI,CAACJ,WAAS,EAACC,QAAS,EAAE,WACvB,SAAC,KAAI,CAACE,MAAI,EAACC,GAAI,GAAG,UACd,UAAC,KAAI,CAACJ,WAAS,EAACK,WAAW,SAASJ,QAASC,EAAAA,GAAaI,eAAe,gBAAe,WACpF,SAAC,KAAI,CAACH,MAAI,EAACC,GAAI,EAAE,UACb,SAAC,IAAQ,CAACN,QAAQ,cAAcU,OAAQ,QAE5C,SAAC,KAAI,CAACL,MAAI,EAACC,GAAI,EAAE,UACb,UAAC,KAAI,CAACJ,WAAS,EAACK,WAAW,SAASJ,QAASC,EAAAA,GAAaI,eAAe,gBAAe,WACpF,SAAC,KAAI,CAACH,MAAI,EAACC,IAAE,EAACG,cAAY,YACtB,SAAC,IAAQ,CAACT,QAAQ,cAAcU,OAAQ,QAE5C,SAAC,KAAI,CAACL,MAAI,YACN,SAAC,IAAQ,CAACL,QAAQ,cAAcU,OAAQ,GAAIC,MAAO,kBAMvE,SAAC,KAAI,CAACN,MAAI,EAACC,GAAI,EAAE,UACb,SAAC,IAAQ,CAACN,QAAQ,cAAcU,OAAQ,aAIpD,SAAC,KAAI,CAACL,MAAI,EAACC,GAAI,GAAG,UACd,UAAC,KAAI,CAACJ,WAAS,EAACC,QAAS,EAAE,WACvB,SAAC,KAAI,CAACE,MAAI,EAACC,GAAI,GAAG,UACd,UAAC,KAAI,CAACJ,WAAS,EAACK,WAAW,SAASJ,QAASC,EAAAA,GAAaI,eAAe,gBAAe,WACpF,SAAC,KAAI,CAACH,MAAI,EAACC,GAAI,EAAE,UACb,SAAC,IAAQ,CAACN,QAAQ,cAAcU,OAAQ,QAE5C,SAAC,KAAI,CAACL,MAAI,EAACC,GAAI,EAAE,UACb,UAAC,KAAI,CAACJ,WAAS,EAACK,WAAW,SAASJ,QAASC,EAAAA,GAAaI,eAAe,gBAAe,WACpF,SAAC,KAAI,CAACH,MAAI,EAACC,IAAE,EAACG,cAAY,YACtB,SAAC,IAAQ,CAACT,QAAQ,cAAcU,OAAQ,QAE5C,SAAC,KAAI,CAACL,MAAI,YACN,SAAC,IAAQ,CAACL,QAAQ,cAAcU,OAAQ,GAAIC,MAAO,kBAMvE,SAAC,KAAI,CAACN,MAAI,EAACC,GAAI,EAAE,UACb,SAAC,IAAQ,CAACN,QAAQ,cAAcU,OAAQ,aAIpD,SAAC,KAAI,CAACL,MAAI,EAACC,GAAI,GAAG,UACd,UAAC,KAAI,CAACJ,WAAS,EAACC,QAAS,EAAE,WACvB,SAAC,KAAI,CAACE,MAAI,EAACC,GAAI,GAAG,UACd,UAAC,KAAI,CAACJ,WAAS,EAACK,WAAW,SAASJ,QAASC,EAAAA,GAAaI,eAAe,gBAAe,WACpF,SAAC,KAAI,CAACH,MAAI,EAACC,GAAI,EAAE,UACb,SAAC,IAAQ,CAACN,QAAQ,cAAcU,OAAQ,QAE5C,SAAC,KAAI,CAACL,MAAI,EAACC,GAAI,EAAE,UACb,UAAC,KAAI,CAACJ,WAAS,EAACK,WAAW,SAASJ,QAASC,EAAAA,GAAaI,eAAe,gBAAe,WACpF,SAAC,KAAI,CAACH,MAAI,EAACC,IAAE,EAACG,cAAY,YACtB,SAAC,IAAQ,CAACT,QAAQ,cAAcU,OAAQ,QAE5C,SAAC,KAAI,CAACL,MAAI,YACN,SAAC,IAAQ,CAACL,QAAQ,cAAcU,OAAQ,GAAIC,MAAO,kBAMvE,SAAC,KAAI,CAACN,MAAI,EAACC,GAAI,EAAE,UACb,SAAC,IAAQ,CAACN,QAAQ,cAAcU,OAAQ,aAIpD,SAAC,KAAI,CAACL,MAAI,EAACC,GAAI,GAAG,UACd,UAAC,KAAI,CAACJ,WAAS,EAACC,QAAS,EAAE,WACvB,SAAC,KAAI,CAACE,MAAI,EAACC,GAAI,GAAG,UACd,UAAC,KAAI,CAACJ,WAAS,EAACK,WAAW,SAASJ,QAASC,EAAAA,GAAaI,eAAe,gBAAe,WACpF,SAAC,KAAI,CAACH,MAAI,EAACC,GAAI,EAAE,UACb,SAAC,IAAQ,CAACN,QAAQ,cAAcU,OAAQ,QAE5C,SAAC,KAAI,CAACL,MAAI,EAACC,GAAI,EAAE,UACb,UAAC,KAAI,CAACJ,WAAS,EAACK,WAAW,SAASJ,QAASC,EAAAA,GAAaI,eAAe,gBAAe,WACpF,SAAC,KAAI,CAACH,MAAI,EAACC,IAAE,EAACG,cAAY,YACtB,SAAC,IAAQ,CAACT,QAAQ,cAAcU,OAAQ,QAE5C,SAAC,KAAI,CAACL,MAAI,YACN,SAAC,IAAQ,CAACL,QAAQ,cAAcU,OAAQ,GAAIC,MAAO,kBAMvE,SAAC,KAAI,CAACN,MAAI,EAACC,GAAI,EAAE,UACb,SAAC,IAAQ,CAACN,QAAQ,cAAcU,OAAQ,kBAM5D,SAAC,IAAW,CAACjB,GAAI,CAAEmB,EAAG,KAAMC,QAAS,OAAQC,GAAI,EAAGN,eAAgB,UAAW,UAC3E,SAAC,IAAQ,CAACR,QAAQ,cAAcU,OAAQ,GAAIC,MAAO,S,2MC6L/D,UAnQ6B,IAAoB,IAAnB,UAAEI,GAAW,EACvC,MAAMC,GAAQpB,EAAAA,EAAAA,KACRqB,GAAWC,EAAAA,EAAAA,OACVC,EAAQC,IAAazD,EAAAA,EAAAA,UAAS,KAQrC0D,EAAAA,EAAAA,YAAU,KANGC,WACT,MAAMH,QAAeI,EAAAA,EAAAA,MACrBN,EAAS,CAAEO,KAAMC,EAAAA,GAAYN,OAAQA,IACrCC,EAAUD,EAAO,EAIjBO,EAAM,GACP,IACH,MAAOC,EAAUC,IAAejE,EAAAA,EAAAA,UAAS,OAClCU,EAAMwD,IAAWlE,EAAAA,EAAAA,UAAS,IAC1BmE,EAAaC,GAAkBC,EAAAA,SAAe,IAG/CC,GADgBC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,WACnBjB,OAC1BkB,EAAQ,IAAIC,KASZC,GAAYC,EAAAA,EAAAA,GAAcxB,EAAMyB,YAAYC,KAAK,OAUjDC,EAAQ9E,KAAKC,KAAKmE,EAAUlE,OAAS+D,GACrCc,GAAQC,EAAAA,EAAAA,GAAcZ,EAAWH,GAMjCgB,EAAgBF,EAAMrE,cAAcwE,KAAI,CAAC1C,EAAM2C,KAE7C,SAAC,KAAI,CAAC3C,MAAI,EAACC,GAAI,GAAgBb,GAAI,CAAEwD,aAAc,yBAA0B,UACzE,SAAC,KAAI,CAAC/C,WAAS,EAACgD,UAAU,SAASzD,GAAI,CAAE0D,UAAW,OAAQC,aAAc,QAAS,UAC/E,SAAC,KAAI,CAAC/C,MAAI,EAACZ,GAAI,CAAEiB,OAAQ,QAAS,UAC9B,SAAC,KAAI,CAAC2C,GAAK,0BAAyBhD,EAAKiD,KAAMC,MAAO,CAAEC,eAAgB,QAAS,UAC7E,UAAC,KAAI,CAACtD,WAAS,EAACK,WAAW,SAASC,eAAe,gBAAe,WAC9D,UAAC,KAAI,CAACH,MAAI,EAACC,GAAI,EAAE,WACb,SAAC,IAAU,CACPb,GAAI,CACAgE,WAAY,QACZC,UAAW,SACXC,WAAa,IAAEpB,EAAY,MAAQ,OACnCqB,SAAW,IAAErB,EAAY,OAAS,QAClCsB,WAAa,IAAEtB,EAAY,OAAS,QACpCuB,MAAO,UACPV,aAAc,QAChB,mBAIN,SAAC,IAAU,CACPpD,QAAQ,YACR8D,MAAM,UACNrE,GAAI,CACAgE,WAAY,QACZC,UAAW,SACXC,WAAa,IAAEpB,EAAY,MAAQ,OACnCqB,SAAW,IAAErB,EAAY,OAAS,QAClCsB,WAAa,IAAEtB,EAAY,OAAS,SAExChC,WAAW,OAAM,SAEhBF,EAAK0D,WAGd,UAAC,KAAI,CAAC1D,MAAI,EAACC,GAAI,EAAE,WACb,SAAC,IAAU,CACPb,GAAI,CACAgE,WAAY,QACZC,UAAW,SACXC,WAAa,IAAEpB,EAAY,MAAQ,OACnCqB,SAAW,IAAErB,EAAY,OAAS,QAClCsB,WAAa,IAAEtB,EAAY,OAAS,QACpCuB,MAAO,UACPV,aAAc,QAChB,mBAIN,SAAC,IAAU,CACPpD,QAAQ,YACR8D,MAAM,UACNrE,GAAI,CACAgE,WAAY,QACZC,UAAW,SACXC,WAAa,IAAEpB,EAAY,MAAQ,OACnCqB,SAAW,IAAErB,EAAY,OAAS,QAClCsB,WAAa,IAAEtB,EAAY,OAAS,SACtC,SAEDlC,EAAK2D,KAAKD,WAGnB,UAAC,KAAI,CAAC1D,MAAI,EAACC,GAAI,EAAE,WACb,SAAC,IAAU,CACPb,GAAI,CACAgE,WAAY,QACZC,UAAW,SACXC,WAAa,IAAEpB,EAAY,MAAQ,OACnCqB,SAAW,IAAErB,EAAY,OAAS,QAClCsB,WAAa,IAAEtB,EAAY,OAAS,QACpCuB,MAAO,UACPV,aAAc,QAChB,oBAIN,SAAC,IAAU,CACPpD,QAAQ,YACR8D,MAAM,UACNrE,GAAI,CACAgE,WAAY,QACZC,UAAW,SACXC,WAAa,IAAEpB,EAAY,MAAQ,OACnCqB,SAAW,IAAErB,EAAY,OAAS,QAClCsB,WAAa,IAAEtB,EAAY,OAAS,SACtC,SAEDlC,EAAK4D,kBAGd,UAAC,KAAI,CAAC5D,MAAI,EAACC,GAAI,EAAE,WACb,SAAC,IAAU,CACPb,GAAI,CACAgE,WAAY,QACZC,UAAW,SACXC,WAAa,IAAEpB,EAAY,MAAQ,OACnCqB,SAAW,IAAErB,EAAY,OAAS,QAClCsB,WAAa,IAAEtB,EAAY,OAAS,QACpCuB,MAAO,UACPV,aAAc,QAChB,mBAIN,SAAC,IAAU,CACPpD,QAAQ,YACR8D,MAAM,UACNrE,GAAI,CACAgE,WAAY,QACZC,UAAW,SACXC,WAAa,IAAEpB,EAAY,MAAQ,OACnCqB,SAAW,IAAErB,EAAY,OAAS,QAClCsB,WAAa,IAAEtB,EAAY,OAAS,SACtC,SAEDlC,EAAK2D,KAAKE,gBAGnB,UAAC,KAAI,CAAC7D,MAAI,EAACC,GAAI,EAAE,WACb,SAAC,IAAU,CACPb,GAAI,CACAgE,WAAY,QACZC,UAAW,SACXC,WAAa,IAAEpB,EAAY,MAAQ,OACnCqB,SAAW,IAAErB,EAAY,OAAS,QAClCsB,WAAa,IAAEtB,EAAY,OAAS,QACpCuB,MAAO,UACPV,aAAc,QAChB,qBAIN,SAAC,IAAU,CACPpD,QAAQ,YACR8D,MAAO,IAAIxB,KAAKjC,EAAK8D,UAAUC,WAAa/B,EAAM+B,UAAY,UAAY,UAC1E3E,GAAI,CACAgE,WAAY,QACZC,UAAW,SACXC,WAAa,IAAEpB,EAAY,MAAQ,OACnCqB,SAAW,IAAErB,EAAY,OAAS,QAClCsB,WAAa,IAAEtB,EAAY,OAAS,SAExChC,WAAW,OAAM,SAEhB,IAAI+B,KAAKjC,EAAK8D,UAAUC,WAAa/B,EAAM+B,UAAY,OAAS,yBAhJrEpB,KA2JhC,OACI,8BACKjC,GACG,SAAC,IAAmB,KAEpB,iCACI,SAAC,KAAI,CAACV,MAAI,EAACZ,GAAI,CAAE4E,cAAe,QAAS,UACrC,SAAC,IAAU,CACP5E,GAAI,CACAgE,WAAY,QACZC,UAAW,SACXC,WAAY,MACZC,SAAU,OACVC,WAAY,OACZC,MAAO,WACT,+BAMV,SAAC,IAAQ,CAAC3E,SAAS,EAAM,UACrB,UAAC,IAAW,YACR,SAAC,IAAe,CACZmF,UAAU,MACV3B,MAAOV,EAAUlE,OACjBM,KAAMA,EACNkG,aAvMH,CAACC,EAAOC,KAC7B5C,EAAQ4C,EAAQ,EAuMQ3C,YAAaA,EACb4C,oBAtMKF,IAC7BzC,EAAe4C,SAASH,EAAMI,OAAOC,MAAO,KAC5ChD,EAAQ,EAAE,EAqMcpC,GAAI,CAAEoB,QAAS,OAAQL,eAAgB,eAE3C,SAAC,KAAI,CAACN,WAAS,EAACC,QAASC,EAAAA,GAAaX,GAAI,CAAEkB,MAAO,mBAAoB,SAClEmC,KAEL,SAAC,IAAU,CACPH,MAAOA,EACPmC,KAAK,QACLzG,KAAMA,EACN2B,QAAQ,WACR+E,MAAM,UACNC,SA3MP,CAACC,EAAGrE,KACrBiB,EAAQjB,GACRgC,EAAMxE,KAAKwC,EAAE,EA0MWnB,GAAI,CAAEoB,QAAS,OAAQqE,cAAe,0BAM3D,C","sources":["ui-component/Pagination.js","ui-component/cards/MainCard.js","ui-component/cards/Skeleton/PopularCard.js","views/campaigns/Performance.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction usePagination(data, itemsPerPage) {\n    const [currentPage, setCurrentPage] = useState(1);\n    const maxPage = Math.ceil(data.length / itemsPerPage);\n\n    function currentData() {\n        const begin = (currentPage - 1) * itemsPerPage;\n        const end = begin + itemsPerPage;\n        return data.slice(begin, end);\n    }\n\n    function next() {\n        setCurrentPage((currentPage) => Math.min(currentPage + 1, maxPage));\n    }\n\n    function prev() {\n        setCurrentPage((currentPage) => Math.max(currentPage - 1, 1));\n    }\n\n    function jump(page) {\n        const pageNumber = Math.max(1, page);\n        setCurrentPage((currentPage) => Math.min(pageNumber, maxPage));\n    }\n\n    return { next, prev, jump, currentData, currentPage, maxPage };\n}\n\nexport default usePagination;\n","/* eslint-disable no-unused-vars */\nimport PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\n\n// constant\nconst headerSX = {\n    '& .MuiCardHeader-action': { mr: 0 }\n};\n\n// ==============================|| CUSTOM MAIN CARD ||============================== //\n\nconst MainCard = forwardRef(\n    (\n        {\n            border = true,\n            boxShadow,\n            children,\n            content = true,\n            contentClass = '',\n            contentSX = {},\n            darkTitle,\n            secondary,\n            shadow,\n            sx = {},\n            title,\n            ...others\n        },\n        ref\n    ) => {\n        const theme = useTheme();\n\n        return (\n            <Card\n                ref={ref}\n                {...others}\n                sx={{\n                    // border: border ? '1px solid' : 'none',\n                    borderRadius: '20px',\n                    backgroundColor: '#36006844',\n                    boxShadow: '40px 7px 132px rgb(0,0,0,0.7)',\n                    ...sx\n                }}\n            >\n                {/* card header and action */}\n                {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\n                {darkTitle && title && (\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\n                )}\n\n                {/* content & header divider */}\n                {title && <Divider />}\n\n                {/* card content */}\n                {content && (\n                    <CardContent sx={contentSX} className={contentClass}>\n                        {children}\n                    </CardContent>\n                )}\n                {!content && children}\n            </Card>\n        );\n    }\n);\n\nMainCard.propTypes = {\n    border: PropTypes.bool,\n    boxShadow: PropTypes.bool,\n    children: PropTypes.node,\n    content: PropTypes.bool,\n    contentClass: PropTypes.string,\n    contentSX: PropTypes.object,\n    darkTitle: PropTypes.bool,\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n    shadow: PropTypes.string,\n    sx: PropTypes.object,\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\n};\n\nexport default MainCard;\n","// material-ui\nimport { Card, CardContent, Grid } from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\n\n// ==============================|| SKELETON - POPULAR CARD ||============================== //\n\nconst PopularCard = () => (\n    <Card>\n        <CardContent>\n            <Grid container spacing={gridSpacing}>\n                <Grid item xs={12}>\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\n                        <Grid item xs zeroMinWidth>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                        <Grid item>\n                            <Skeleton variant=\"rectangular\" height={20} width={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Skeleton variant=\"rectangular\" height={150} />\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </CardContent>\n        <CardContent sx={{ p: 1.25, display: 'flex', pt: 0, justifyContent: 'center' }}>\n            <Skeleton variant=\"rectangular\" height={25} width={75} />\n        </CardContent>\n    </Card>\n);\n\nexport default PopularCard;\n","/* eslint-disable no-unused-vars */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Avatar, Button, CardActions, CardContent, Divider, Grid, Menu, MenuItem, Typography, useMediaQuery } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonPopularCard from 'ui-component/cards/Skeleton/PopularCard';\nimport { gridSpacing } from 'store/constant';\n//pagination\nimport Pagination from '@mui/material/Pagination';\nimport { TablePagination } from '@mui/material';\nimport usePagination from 'ui-component/Pagination';\n// assets\nimport ChevronRightOutlinedIcon from '@mui/icons-material/ChevronRightOutlined';\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\nimport KeyboardArrowUpOutlinedIcon from '@mui/icons-material/KeyboardArrowUpOutlined';\nimport KeyboardArrowDownOutlinedIcon from '@mui/icons-material/KeyboardArrowDownOutlined';\nimport { Link } from 'react-router-dom';\nimport { GET_EVENTS } from 'store/actions';\nimport { getCampaign } from 'services/apis/server';\n\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\nconst CampaignsList = [\n    {\n        Status: 'Live',\n        Name: 'Ogra Megi',\n        Game: 'Shock & Awe',\n        Link: 'dummylink.com',\n        Prize: '$100'\n    },\n    {\n        Status: 'No Live',\n        Name: 'Grim Stroke',\n        Game: 'Long Winter',\n        Link: 'dummylink.com',\n        Prize: '$150'\n    },\n    {\n        Status: 'Live',\n        Name: 'Jessica',\n        Game: 'Master Thief',\n        Link: 'dummylink.com',\n        Prize: '$200'\n    },\n    {\n        Status: 'Live',\n        Name: 'Ogra Megi',\n        Game: 'Shock & Awe',\n        Link: 'dummylink.com',\n        Prize: '$300'\n    },\n    {\n        Status: 'No Live',\n        Name: 'Grim Stroke',\n        Game: 'Long Winter',\n        Link: 'dummylink.com',\n        Prize: '$150'\n    },\n    {\n        Status: 'Live',\n        Name: 'Jessica',\n        Game: 'Master Thief',\n        Link: 'dummylink.com',\n        Prize: '$200'\n    },\n    {\n        Status: 'No Live',\n        Name: 'Ogra Megi',\n        Game: 'Shock & Awe',\n        Link: 'dummylink.com',\n        Prize: '$300'\n    }\n];\n\nconst CampaignPerformances = ({ isLoading }) => {\n    const theme = useTheme();\n    const dispatch = useDispatch();\n    const [events, setEvents] = useState([]);\n\n    const load = async () => {\n        const events = await getCampaign();\n        dispatch({ type: GET_EVENTS, events: events });\n        setEvents(events);\n    };\n\n    useEffect(() => {\n        load();\n    }, []);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const campaignsData = useSelector((state) => state.campaign);\n    const allEvents = campaignsData.events;\n    const today = new Date();\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const matchesMD = useMediaQuery(theme.breakpoints.down('md'));\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const count = Math.ceil(allEvents.length / rowsPerPage);\n    const _DATA = usePagination(allEvents, rowsPerPage);\n    const handleChange = (e, p) => {\n        setPage(p);\n        _DATA.jump(p);\n    };\n\n    const campaignTable = _DATA.currentData().map((item, index) => {\n        return (\n            <Grid item xs={12} key={index} sx={{ borderBottom: '0.5px solid #821EF088' }}>\n                <Grid container direction=\"column\" sx={{ marginTop: '40px', marginBottom: '40px' }}>\n                    <Grid item sx={{ height: '60px' }}>\n                        <Link to={`/campaigns/information/${item.id}`} style={{ textDecoration: 'none' }}>\n                            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                <Grid item xs={3}>\n                                    <Typography\n                                        sx={{\n                                            fontFamily: 'Inter',\n                                            fontStyle: 'normal',\n                                            fontWeight: `${matchesMD ? '300' : '500'}`,\n                                            fontSize: `${matchesMD ? '10px' : '15px'}`,\n                                            lineHeight: `${matchesMD ? '13px' : '18px'}`,\n                                            color: '#B9B9B9',\n                                            marginBottom: '16px'\n                                        }}\n                                    >\n                                        Name\n                                    </Typography>\n                                    <Typography\n                                        variant=\"subtitle1\"\n                                        color=\"#FFFFFF\"\n                                        sx={{\n                                            fontFamily: 'Inter',\n                                            fontStyle: 'normal',\n                                            fontWeight: `${matchesMD ? '400' : '600'}`,\n                                            fontSize: `${matchesMD ? '15px' : '20px'}`,\n                                            lineHeight: `${matchesMD ? '18px' : '24px'}`\n                                        }}\n                                        alignItems=\"left\"\n                                    >\n                                        {item.name}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <Typography\n                                        sx={{\n                                            fontFamily: 'Inter',\n                                            fontStyle: 'normal',\n                                            fontWeight: `${matchesMD ? '300' : '500'}`,\n                                            fontSize: `${matchesMD ? '10px' : '15px'}`,\n                                            lineHeight: `${matchesMD ? '13px' : '18px'}`,\n                                            color: '#B9B9B9',\n                                            marginBottom: '16px'\n                                        }}\n                                    >\n                                        Game\n                                    </Typography>\n                                    <Typography\n                                        variant=\"subtitle1\"\n                                        color=\"#FF4C9D\"\n                                        sx={{\n                                            fontFamily: 'Inter',\n                                            fontStyle: 'normal',\n                                            fontWeight: `${matchesMD ? '400' : '600'}`,\n                                            fontSize: `${matchesMD ? '15px' : '20px'}`,\n                                            lineHeight: `${matchesMD ? '18px' : '24px'}`\n                                        }}\n                                    >\n                                        {item.game.name}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <Typography\n                                        sx={{\n                                            fontFamily: 'Inter',\n                                            fontStyle: 'normal',\n                                            fontWeight: `${matchesMD ? '300' : '500'}`,\n                                            fontSize: `${matchesMD ? '10px' : '15px'}`,\n                                            lineHeight: `${matchesMD ? '13px' : '18px'}`,\n                                            color: '#B9B9B9',\n                                            marginBottom: '16px'\n                                        }}\n                                    >\n                                        Prize\n                                    </Typography>\n                                    <Typography\n                                        variant=\"subtitle1\"\n                                        color=\"#04B4DD\"\n                                        sx={{\n                                            fontFamily: 'Inter',\n                                            fontStyle: 'normal',\n                                            fontWeight: `${matchesMD ? '400' : '600'}`,\n                                            fontSize: `${matchesMD ? '15px' : '20px'}`,\n                                            lineHeight: `${matchesMD ? '18px' : '24px'}`\n                                        }}\n                                    >\n                                        {item.event_coins}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <Typography\n                                        sx={{\n                                            fontFamily: 'Inter',\n                                            fontStyle: 'normal',\n                                            fontWeight: `${matchesMD ? '300' : '500'}`,\n                                            fontSize: `${matchesMD ? '10px' : '15px'}`,\n                                            lineHeight: `${matchesMD ? '13px' : '18px'}`,\n                                            color: '#B9B9B9',\n                                            marginBottom: '16px'\n                                        }}\n                                    >\n                                        Link\n                                    </Typography>\n                                    <Typography\n                                        variant=\"subtitle1\"\n                                        color=\"#FFFFFF\"\n                                        sx={{\n                                            fontFamily: 'Inter',\n                                            fontStyle: 'normal',\n                                            fontWeight: `${matchesMD ? '400' : '600'}`,\n                                            fontSize: `${matchesMD ? '10px' : '20px'}`,\n                                            lineHeight: `${matchesMD ? '18px' : '24px'}`\n                                        }}\n                                    >\n                                        {item.game.video_url}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={1}>\n                                    <Typography\n                                        sx={{\n                                            fontFamily: 'Inter',\n                                            fontStyle: 'normal',\n                                            fontWeight: `${matchesMD ? '300' : '500'}`,\n                                            fontSize: `${matchesMD ? '10px' : '15px'}`,\n                                            lineHeight: `${matchesMD ? '13px' : '18px'}`,\n                                            color: '#B9B9B9',\n                                            marginBottom: '16px'\n                                        }}\n                                    >\n                                        Status\n                                    </Typography>\n                                    <Typography\n                                        variant=\"subtitle1\"\n                                        color={new Date(item.end_time).getTime() >= today.getTime() ? '#43CC83' : '#FF0000'}\n                                        sx={{\n                                            fontFamily: 'Inter',\n                                            fontStyle: 'normal',\n                                            fontWeight: `${matchesMD ? '400' : '600'}`,\n                                            fontSize: `${matchesMD ? '10px' : '20px'}`,\n                                            lineHeight: `${matchesMD ? '18px' : '24px'}`\n                                        }}\n                                        alignItems=\"left\"\n                                    >\n                                        {new Date(item.end_time).getTime() >= today.getTime() ? 'Live' : 'No Live'}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Link>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    });\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonPopularCard />\n            ) : (\n                <>\n                    <Grid item sx={{ paddingBottom: '50px' }}>\n                        <Typography\n                            sx={{\n                                fontFamily: 'Inter',\n                                fontStyle: 'normal',\n                                fontWeight: '700',\n                                fontSize: '30px',\n                                lineHeight: '36px',\n                                color: '#FFFFFF'\n                            }}\n                        >\n                            Your Campaigns\n                        </Typography>\n                    </Grid>\n\n                    <MainCard content={false}>\n                        <CardContent>\n                            <TablePagination\n                                component=\"div\"\n                                count={allEvents.length}\n                                page={page}\n                                onPageChange={handleChangePage}\n                                rowsPerPage={rowsPerPage}\n                                onRowsPerPageChange={handleChangeRowsPerPage}\n                                sx={{ display: 'flex', justifyContent: 'flex-end' }}\n                            />\n                            <Grid container spacing={gridSpacing} sx={{ width: '100% !important' }}>\n                                {campaignTable}\n                            </Grid>\n                            <Pagination\n                                count={count}\n                                size=\"large\"\n                                page={page}\n                                variant=\"outlined\"\n                                shape=\"rounded\"\n                                onChange={handleChange}\n                                sx={{ display: 'flex', flexDirection: 'row-reverse' }}\n                            />\n                        </CardContent>\n                    </MainCard>\n                </>\n            )}\n        </>\n    );\n};\n\nCampaignPerformances.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default CampaignPerformances;\n"],"names":["data","itemsPerPage","currentPage","setCurrentPage","useState","maxPage","Math","ceil","length","next","min","prev","max","jump","page","pageNumber","currentData","begin","end","slice","headerSX","mr","MainCard","forwardRef","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","useTheme","borderRadius","backgroundColor","action","variant","className","container","spacing","gridSpacing","item","xs","alignItems","justifyContent","zeroMinWidth","height","width","p","display","pt","isLoading","theme","dispatch","useDispatch","events","setEvents","useEffect","async","getCampaign","type","GET_EVENTS","load","anchorEl","setAnchorEl","setPage","rowsPerPage","setRowsPerPage","React","allEvents","useSelector","state","campaign","today","Date","matchesMD","useMediaQuery","breakpoints","down","count","_DATA","usePagination","campaignTable","map","index","borderBottom","direction","marginTop","marginBottom","to","id","style","textDecoration","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","color","name","game","event_coins","video_url","end_time","getTime","paddingBottom","component","onPageChange","event","newPage","onRowsPerPageChange","parseInt","target","value","size","shape","onChange","e","flexDirection"],"sourceRoot":""}