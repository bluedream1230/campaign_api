{"version":3,"file":"static/js/25.34956ee3.chunk.js","mappings":"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","sources":["hooks/useScriptRef.js","ui-component/extended/AnimateButton.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/auth-forms/AuthReset.js","views/pages/authentication/authentication/ResetPassword.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n// third-party\nimport { motion, useCycle } from 'framer-motion';\n\n// ==============================|| ANIMATION BUTTON ||============================== //\n\nconst AnimateButton = forwardRef(({ children, type, direction, offset, scale }, ref) => {\n    let offset1;\n    let offset2;\n    switch (direction) {\n        case 'up':\n        case 'left':\n            offset1 = offset;\n            offset2 = 0;\n            break;\n        case 'right':\n        case 'down':\n        default:\n            offset1 = 0;\n            offset2 = offset;\n            break;\n    }\n\n    const [x, cycleX] = useCycle(offset1, offset2);\n    const [y, cycleY] = useCycle(offset1, offset2);\n\n    switch (type) {\n        case 'rotate':\n            return (\n                <motion.div\n                    ref={ref}\n                    animate={{ rotate: 360 }}\n                    transition={{\n                        repeat: Infinity,\n                        repeatType: 'loop',\n                        duration: 2,\n                        repeatDelay: 0\n                    }}\n                >\n                    {children}\n                </motion.div>\n            );\n        case 'slide':\n            if (direction === 'up' || direction === 'down') {\n                return (\n                    <motion.div\n                        ref={ref}\n                        animate={{ y: y !== undefined ? y : '' }}\n                        onHoverEnd={() => cycleY()}\n                        onHoverStart={() => cycleY()}\n                    >\n                        {children}\n                    </motion.div>\n                );\n            }\n            return (\n                <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\n                    {children}\n                </motion.div>\n            );\n\n        case 'scale':\n        default:\n            if (typeof scale === 'number') {\n                scale = {\n                    hover: scale,\n                    tap: scale\n                };\n            }\n            return (\n                <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\n                    {children}\n                </motion.div>\n            );\n    }\n});\n\nAnimateButton.propTypes = {\n    children: PropTypes.node,\n    offset: PropTypes.number,\n    type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\n    direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\n    scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\n};\n\nAnimateButton.defaultProps = {\n    type: 'scale',\n    offset: 10,\n    direction: 'right',\n    scale: {\n        hover: 1,\n        tap: 0.9\n    }\n};\n\nexport default AnimateButton;\n","/* eslint-disable no-unused-vars */\n// material-ui\nimport { styled } from '@mui/material/styles';\n\nimport BackgroundImage from 'assets/images/login-screen.jpg';\n\nconst AuthWrapper1 = styled('div')(({}) => ({\n    backgroundImage: `url(${BackgroundImage})`,\n    minHeight: '100vh',\n    width: '100%',\n    backgroundPosition: 'center',\n    backgroundSize: 'cover'\n}));\n\nexport default AuthWrapper1;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport { useTheme } from '@mui/material/styles';\nimport { Box, Button, FormControl, FormHelperText, Grid, InputLabel, OutlinedInput, Typography } from '@mui/material';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\nimport useScriptRef from 'hooks/useScriptRef';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { resetPassword } from 'services/apis/server';\n\nconst CreatePasswordPage = React.forwardRef((props, ref) => <RouterLink ref={ref} to=\"/auth/createpassword\" {...props} role={undefined} />);\n\nconst ResetPassword = ({ ...others }) => {\n    const theme = useTheme();\n    const scriptedRef = useScriptRef();\n    const { state } = useLocation();\n    const email = state.email;\n    const sendForMail = async (values) => {\n        try {\n            console.log(values, email);\n            const data = await resetPassword({ email: values, userid: email });\n            console.log(data);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    return (\n        <>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                <Grid item xs={12} container alignItems=\"left\" justifyContent=\"left\">\n                    <Box sx={{ mb: 2 }}>\n                        <Typography\n                            color=\"#FFFFFF\"\n                            fontFamily=\"Inter\"\n                            fontStyle=\"normal\"\n                            fontWeight=\"400\"\n                            fontSize=\"21px\"\n                            lineHeight=\"40px\"\n                            marginBottom=\"75px\"\n                            width=\"555px\"\n                        >\n                            No Worries! Just enter your email and we'll send you a reset password link.\n                        </Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n\n            <Formik\n                initialValues={{\n                    submit: null,\n                    email: email ? email : ''\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                    try {\n                        if (scriptedRef.current) {\n                            setStatus({ success: true });\n                            setSubmitting(false);\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors({ submit: err.message });\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.email && errors.email)}\n                            sx={{ ...theme.typography.customInput, marginBottom: '58px' }}\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-login\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                label=\"Email Address\"\n                                inputProps={{}}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                    {errors.email}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        {errors.submit && (\n                            <Box sx={{ mt: 3 }}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box sx={{ mt: 2 }}>\n                            <AnimateButton>\n                                <Button\n                                    // component={CreatePasswordPage}\n                                    // to=\"/auth/createpassword\"\n                                    disableElevation\n                                    // disabled={isSubmitting}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    onClick={() => sendForMail(values.email)}\n                                    variant=\"contained\"\n                                    sx={{\n                                        backgroundColor: '#FF0676',\n                                        borderRadius: '18px',\n                                        height: '90px',\n                                        fontFamily: 'Inter',\n                                        fontStyle: 'normal',\n                                        fontWeight: '700',\n                                        fontSize: '27px',\n                                        lineHeight: '34px'\n                                    }}\n                                >\n                                    Send Recovery Email\n                                </Button>\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </>\n    );\n};\n\nexport default ResetPassword;\n","/* eslint-disable no-unused-vars */\nimport { useTheme } from '@mui/material/styles';\nimport { Grid, Stack, Typography, useMediaQuery } from '@mui/material';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nimport AuthWrapper1 from '../AuthWrapper1';\nimport ResetPassword from '../auth-forms/AuthReset';\n\nconst Login = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return (\n        <AuthWrapper1>\n            <PerfectScrollbar\n                component=\"div\"\n                style={{\n                    height: '100vh'\n                }}\n            >\n                <Grid container direction=\"row\" justifyContent=\"left\" alignItems=\"center\" sx={{ minHeight: '100vh' }}>\n                    <Grid item xs={12} md={12} sm={12} lg={7}>\n                        <Grid\n                            container\n                            sx={{\n                                width: '100%',\n                                marginLeft: 'auto',\n                                maxWidth: '1320px',\n                                height: '100vh',\n                                alignItems: 'center',\n                                justifyContent: 'center'\n                            }}\n                        >\n                            <Grid\n                                item\n                                xs={12}\n                                md={12}\n                                sm={12}\n                                lg={12}\n                                sx={{\n                                    marginLeft: '166px',\n                                    marginRight: '283px'\n                                }}\n                            >\n                                <Grid container alignItems=\"left\" justifyContent=\"left\">\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"left\"\n                                            justifyContent=\"left\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"left\" justifyContent=\"left\" spacing={1}>\n                                                    <Typography\n                                                        color=\"#FFFFFF\"\n                                                        gutterBottom\n                                                        fontSize={matchDownSM ? '50px' : '70px'}\n                                                        fontWeight=\"700\"\n                                                        fontStyle=\"normal\"\n                                                        fontFamily=\"Inter\"\n                                                        lineHeight=\"85px\"\n                                                        marginBottom=\"30px\"\n                                                    >\n                                                        Reset Password\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <ResetPassword />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </PerfectScrollbar>\n        </AuthWrapper1>\n    );\n};\n\nexport default Login;\n"],"names":["scripted","useRef","useEffect","current","AnimateButton","forwardRef","ref","offset1","offset2","children","type","direction","offset","scale","x","cycleX","useCycle","y","cycleY","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","styled","backgroundImage","BackgroundImage","minHeight","width","backgroundPosition","backgroundSize","others","theme","useTheme","scriptedRef","useScriptRef","state","useLocation","email","Grid","container","justifyContent","spacing","item","xs","alignItems","Box","sx","mb","Typography","color","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","marginBottom","initialValues","submit","validationSchema","Yup","shape","max","required","password","onSubmit","async","values","setErrors","setStatus","setSubmitting","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","value","name","onBlur","onChange","label","inputProps","FormHelperText","mt","Button","disableElevation","size","onClick","log","data","resetPassword","userid","e","sendForMail","variant","backgroundColor","borderRadius","height","matchDownSM","useMediaQuery","breakpoints","down","AuthWrapper1","component","style","md","sm","lg","marginLeft","maxWidth","marginRight","Stack","gutterBottom"],"sourceRoot":""}