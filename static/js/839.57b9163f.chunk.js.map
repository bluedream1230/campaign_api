{"version":3,"file":"static/js/839.57b9163f.chunk.js","mappings":"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","sources":["ui-component/cards/MainCard.js","views/prizes/Manage.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\n\n// constant\nconst headerSX = {\n    '& .MuiCardHeader-action': { mr: 0 }\n};\n\n// ==============================|| CUSTOM MAIN CARD ||============================== //\n\nconst MainCard = forwardRef(\n    (\n        {\n            border = true,\n            boxShadow,\n            children,\n            content = true,\n            contentClass = '',\n            contentSX = {},\n            darkTitle,\n            secondary,\n            shadow,\n            sx = {},\n            title,\n            ...others\n        },\n        ref\n    ) => {\n        const theme = useTheme();\n\n        return (\n            <Card\n                ref={ref}\n                {...others}\n                sx={{\n                    // border: border ? '1px solid' : 'none',\n                    borderRadius: '20px',\n                    backgroundColor: '#36006844',\n                    boxShadow: '40px 7px 132px rgb(0,0,0,0.7)',\n                    ...sx\n                }}\n            >\n                {/* card header and action */}\n                {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\n                {darkTitle && title && (\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\n                )}\n\n                {/* content & header divider */}\n                {title && <Divider />}\n\n                {/* card content */}\n                {content && (\n                    <CardContent sx={contentSX} className={contentClass}>\n                        {children}\n                    </CardContent>\n                )}\n                {!content && children}\n            </Card>\n        );\n    }\n);\n\nMainCard.propTypes = {\n    border: PropTypes.bool,\n    boxShadow: PropTypes.bool,\n    children: PropTypes.node,\n    content: PropTypes.bool,\n    contentClass: PropTypes.string,\n    contentSX: PropTypes.object,\n    darkTitle: PropTypes.bool,\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n    shadow: PropTypes.string,\n    sx: PropTypes.object,\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\n};\n\nexport default MainCard;\n","/* eslint-disable no-unused-vars */\nimport * as React from 'react';\nimport * as Yup from 'yup';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Backdrop, Button, CardContent, CircularProgress, Grid, TextField, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport Select from '@mui/material/Select';\nimport MainCard from 'ui-component/cards/MainCard';\nimport { gridSpacing } from 'store/constant';\nimport PrizeSelect from 'ui-component/PrizeSelect';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { useFormik } from 'formik';\nimport { createPrize, getCampaign, getReward } from 'services/apis/server';\nimport { store } from 'store';\nimport { GET_EVENTS, GET_REWARDS } from 'store/actions';\n\nconst PrizeList = React.forwardRef((props, ref) => <RouterLink ref={ref} to=\"/prizes/index\" {...props} role={undefined} />);\nconst state = store.getState();\n\nconst UpdatePrize = () => {\n    const theme = useTheme();\n    const allEvents = useSelector((state) => state.campaign);\n    const PrizeListData = allEvents.rewards;\n    const PrizeLabelList = [];\n    PrizeListData.map((item, index) => {\n        PrizeLabelList.push({ label: item.name, key: index });\n    });\n    const validationSchema = Yup.object({\n        name: Yup.string('Enter name').required('Name is required'),\n        type: Yup.string('').required('Type is required'),\n        category: Yup.string('').required('Category is required'),\n        image_url: Yup.string('').required('Image URL is required'),\n        description: Yup.string('').required('Description is required'),\n        coinvalue: Yup.number('Coin Value must be number').required('Coin Value is required'),\n        timelimit: Yup.number('Time Limit must be number').required('Time Limit is required'),\n        ratelimit: Yup.number('Rate Limit must be number').required('Rate Limit is required')\n    });\n\n    const formik = useFormik({\n        initialValues: {\n            name: '',\n            type: '',\n            category: '',\n            image_url: '',\n            description: '',\n            coinvalue: '',\n            timelimit: '',\n            ratelimit: '',\n            user: ''\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            onCreatePrize(values);\n        }\n    });\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [isLoading, setLoading] = React.useState(false);\n\n    const onCreatePrize = async (values) => {\n        try {\n            setLoading(true);\n            const data = await createPrize({\n                name: values.name,\n                type: values.type,\n                category: values.category,\n                image_url: values.image_url,\n                description: values.description,\n                coinvalue: values.coinvalue,\n                timelimit: values.timelimit,\n                ratelimit: values.ratelimit,\n                user: state.auth\n            });\n            const rewards = await getReward();\n            dispatch({ type: GET_REWARDS, rewards: rewards });\n            setLoading(false);\n            navigate('/prizes/index');\n        } catch (e) {\n            console.log(e);\n        } finally {\n            setLoading(false);\n        }\n    };\n    return (\n        <>\n            {isLoading && (\n                <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n            )}\n            <MainCard\n                sx={{ marginBottom: '50px', '& .MuiCardContent-root': { paddingTop: '0px !important', paddingBottom: '0px !important' } }}\n            >\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <Grid container alignContent=\"center\" justifyContent=\"space-between\">\n                            <Grid item xs={12} sx={{ paddingRight: '0px !important' }}>\n                                <Grid\n                                    container\n                                    sx={{\n                                        '& .MuiAutocomplete-popper': {\n                                            '& .MuiPaper-root': {\n                                                backgroundColor: '#360068'\n                                            }\n                                        }\n                                    }}\n                                >\n                                    <Autocomplete\n                                        disablePortal\n                                        id=\"combo-box-demo\"\n                                        options={PrizeLabelList}\n                                        sx={{\n                                            ...theme.typography.customInput,\n                                            '& > div > label': {\n                                                fontFamily: 'Inter',\n                                                fontStyle: 'normal',\n                                                fontWeight: '700',\n                                                fontSize: '30px',\n                                                lineHeight: '36px',\n                                                color: '#FFFFFF',\n                                                left: '-11px'\n                                            },\n                                            '& > div > div > fieldset': {\n                                                border: '0px'\n                                            }\n                                        }}\n                                        renderInput={(params) => <TextField {...params} label=\"Select Prizes\" />}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </MainCard>\n\n            <MainCard>\n                <form onSubmit={formik.handleSubmit}>\n                    <Grid container spacing={gridSpacing}>\n                        <Grid item xs={12} sx={{ marginTop: '45px', marginBottom: '25px' }}>\n                            <Grid container alignContent=\"center\" justifyContent=\"space-between\">\n                                <Grid item>\n                                    <Typography\n                                        sx={{\n                                            fontFamily: 'Inter',\n                                            fontStyle: 'normal',\n                                            fontWeight: '700',\n                                            fontSize: '30px',\n                                            lineHeight: '36px',\n                                            color: '#FFFFFF'\n                                        }}\n                                    >\n                                        Creating Your Prize\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={9} sx={{ marginBottom: '45px' }}>\n                            <Grid container alignContent=\"center\" justifyContent=\"space-between\">\n                                <Grid item>\n                                    <Typography\n                                        sx={{\n                                            fontFamily: 'Inter',\n                                            fontStyle: 'normal',\n                                            fontWeight: '400',\n                                            fontSize: '16px',\n                                            lineHeight: '180%',\n                                            color: '#FFFFFF'\n                                        }}\n                                    >\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Metus, convallis sed sagittis sit varius\n                                        ullamcorper. At morbi amet nec montes. Nisi, lacinia pellentesque consequat cursus. Ultricies neque,\n                                        magna eget auctor. In lectus cursus nec ultricies.\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Grid container>\n                                <TextField\n                                    fullWidth\n                                    id=\"name\"\n                                    label=\"Name\"\n                                    margin=\"normal\"\n                                    name=\"name\"\n                                    type=\"text\"\n                                    value={formik.values.name}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.name && Boolean(formik.errors.name)}\n                                    helperText={formik.touched.name && formik.errors.name}\n                                    sx={{ ...theme.typography.customInput }}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Grid container>\n                                <TextField\n                                    fullWidth\n                                    label=\"Type\"\n                                    margin=\"normal\"\n                                    name=\"type\"\n                                    type=\"text\"\n                                    id=\"type\"\n                                    value={formik.values.type}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.type && Boolean(formik.errors.type)}\n                                    helperText={formik.touched.type && formik.errors.type}\n                                    sx={{ ...theme.typography.customInput }}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Grid container>\n                                <TextField\n                                    fullWidth\n                                    label=\"Category\"\n                                    margin=\"normal\"\n                                    name=\"category\"\n                                    type=\"text\"\n                                    id=\"category\"\n                                    value={formik.values.category}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.category && Boolean(formik.errors.category)}\n                                    helperText={formik.touched.category && formik.errors.category}\n                                    sx={{ ...theme.typography.customInput }}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Grid container>\n                                <TextField\n                                    fullWidth\n                                    label=\"Image URL\"\n                                    margin=\"normal\"\n                                    name=\"image_url\"\n                                    type=\"text\"\n                                    id=\"image_url\"\n                                    value={formik.values.image_url}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.image_url && Boolean(formik.errors.image_url)}\n                                    helperText={formik.touched.image_url && formik.errors.image_url}\n                                    sx={{ ...theme.typography.customInput }}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Grid container>\n                                <TextField\n                                    fullWidth\n                                    label=\"Description\"\n                                    margin=\"normal\"\n                                    name=\"description\"\n                                    type=\"text\"\n                                    id=\"description\"\n                                    value={formik.values.description}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.description && Boolean(formik.errors.description)}\n                                    helperText={formik.touched.description && formik.errors.description}\n                                    sx={{ ...theme.typography.customInput }}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Grid container>\n                                <TextField\n                                    fullWidth\n                                    label=\"Coin Value\"\n                                    margin=\"normal\"\n                                    name=\"coinvalue\"\n                                    type=\"number\"\n                                    id=\"coinvalue\"\n                                    value={formik.values.coinvalue}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.coinvalue && Boolean(formik.errors.coinvalue)}\n                                    helperText={formik.touched.coinvalue && formik.errors.coinvalue}\n                                    sx={{ ...theme.typography.customInput }}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Grid container>\n                                <TextField\n                                    fullWidth\n                                    label=\"Rate Limit\"\n                                    margin=\"normal\"\n                                    name=\"ratelimit\"\n                                    type=\"number\"\n                                    id=\"ratelimit\"\n                                    value={formik.values.ratelimit}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.ratelimit && Boolean(formik.errors.ratelimit)}\n                                    helperText={formik.touched.ratelimit && formik.errors.ratelimit}\n                                    sx={{ ...theme.typography.customInput }}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Grid container>\n                                <TextField\n                                    fullWidth\n                                    label=\"Time Limit\"\n                                    margin=\"normal\"\n                                    name=\"timelimit\"\n                                    type=\"number\"\n                                    id=\"timelimit\"\n                                    value={formik.values.timelimit}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.timelimit && Boolean(formik.errors.timelimit)}\n                                    helperText={formik.touched.timelimit && formik.errors.timelimit}\n                                    sx={{ ...theme.typography.customInput }}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Button\n                            // component={PrizeList}\n                            // to=\"/prizes/index\"\n                            disableElevation\n                            type=\"submit\"\n                            variant=\"contained\"\n                            sx={{\n                                borderRadius: '8.8',\n                                backgroundColor: '#FF0676',\n                                width: '120px',\n                                height: '40px',\n                                fontSize: '16px',\n                                fontWeight: '700',\n                                marginTop: '60px',\n                                marginBottom: '60px',\n                                lineHeight: '19px'\n                            }}\n                        >\n                            Create\n                        </Button>\n                    </Grid>\n                </form>\n            </MainCard>\n        </>\n    );\n};\n\nexport default UpdatePrize;\n"],"names":["headerSX","mr","MainCard","forwardRef","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","useTheme","borderRadius","backgroundColor","action","variant","className","state","store","theme","allEvents","useSelector","campaign","PrizeListData","rewards","PrizeLabelList","map","item","index","push","label","name","key","validationSchema","Yup","required","type","category","image_url","description","coinvalue","timelimit","ratelimit","formik","useFormik","initialValues","user","onSubmit","values","onCreatePrize","navigate","useNavigate","dispatch","useDispatch","isLoading","setLoading","React","async","createPrize","auth","getReward","GET_REWARDS","e","console","log","color","zIndex","drawer","open","marginBottom","paddingTop","paddingBottom","container","spacing","gridSpacing","xs","alignContent","justifyContent","paddingRight","disablePortal","id","options","typography","customInput","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","left","renderInput","params","handleSubmit","marginTop","sm","fullWidth","margin","value","onChange","handleChange","error","touched","Boolean","errors","helperText","disableElevation","width","height"],"sourceRoot":""}